import{a as D,t as J}from"../chunks/disclose-version.BQYpq_0m.js";import{x as _,E as C,F as x,n as I,a6 as B,y as O,I as G,p as N,a7 as F,l as R,m as L,w as M}from"../chunks/index-client.H1_RUk74.js";import{s as Z,i as W}from"../chunks/preload-helper.sXOXHkSi.js";import{f as z}from"../chunks/card.CFpnmDA7.js";import{d as V}from"../chunks/index.BEr0zjpm.js";function X(t,a,...e){var o=t,s=I,r;_(()=>{s!==(s=a())&&(r&&(B(r),r=null),r=x(()=>s(o,...e)))},C),O&&(o=G)}const Y=!0,K=!1,ee=Object.freeze(Object.defineProperty({__proto__:null,prerender:Y,ssr:K},Symbol.toStringTag,{value:"Module"}));var c=class extends Error{constructor(t,a,e){super(t),this.statusCode=a,this.details=e,this.name="PinataError"}},p=class extends c{constructor(t,a,e){super(t,a,e),this.name="NetworkError"}},m=class extends c{constructor(t,a,e){super(t,a,e),this.name="AuthenticationError"}},y=class extends c{constructor(t,a){super(t,void 0,a),this.name="ValidationError"}},Q=async t=>{if(!t)throw new y("Pinata configuration is missing");let a,e="https://api.pinata.cloud";t.endpointUrl&&(e=t.endpointUrl),t.customHeaders&&Object.keys(t.customHeaders).length>0?a={Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:a={Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/testAuthentication"};try{const o=await fetch(`${e}/data/testAuthentication`,{method:"GET",headers:a});if(!o.ok){const r=await o.text();throw o.status===401||o.status===403?new m(`Authentication failed: ${r}`,o.status,r):new p(`HTTP error: ${r}`,o.status,r)}return await o.json()}catch(o){throw o instanceof c?o:o instanceof Error?new c(`Error processing authentication: ${o.message}`):new c("An unknown error occurred while testing authentication")}};function tt(t){const a=t.match(/\/files\/([^\/]+)/);if(a&&a[1])return a[1];throw new p("File ID not found in URL",400,t)}var et=async(t,a,e)=>{if(!t)throw new y("Pinata configuration is missing");const o=e?.keys||t.pinataJwt;let s="https://uploads.pinata.cloud/v3";if(t.uploadUrl&&(s=t.uploadUrl),a.size>94371840){let i;t.customHeaders&&Object.keys(t.customHeaders).length>0?i={Authorization:`Bearer ${o}`,...t.customHeaders}:i={Authorization:`Bearer ${o}`,Source:"sdk/file"};const u=e?.metadata?.name||a.name||"File from SDK";let l=`filename ${btoa(u)},filetype ${btoa(a.type)}`;e?.groupId&&l+`,group_id ${btoa(e.groupId)}`,e?.metadata?.keyvalues&&l+`,keyvalues ${btoa(JSON.stringify(e.metadata.keyvalues))}`;let h=`${s}/files`;e?.url&&(h=e.url);const f=await fetch(h,{method:"POST",headers:{"Upload-Length":`${a.size}`,"Upload-Metadata":l,...i}}),w=f.headers.get("Location");if(!w)throw new p("Upload URL not provided",f.status,"");const d=50*1024*1024,$=Math.ceil(a.size/d);let g=0,k;for(let T=0;T<$;T++){const v=a.slice(g,g+d);if(k=await fetch(w,{method:"PATCH",headers:{"Content-Type":"application/offset+octet-stream","Upload-Offset":g.toString(),...i},body:v}),!k.ok){const A=await k.text();throw new p(`HTTP error during chunk upload: ${A}`,k.status,A)}g+=v.size}if(k.status===204){const T=tt(w);let v;t.endpointUrl?v=t.endpointUrl:v="https://api.pinata.cloud/v3";const b=(await(await fetch(`${v}/files/${T}`,{method:"GET",headers:{Authorization:`Bearer ${o}`}})).json()).data;if(e?.vectorize){const H=await fetch(`${s}/vectorize/files/${b.id}`,{method:"POST",headers:{Authorization:`Bearer ${o}`}});if(H.ok)return b.vectorized=!0,b;{const j=await H.text();throw new p(`HTTP error during vectorization: ${j}`,H.status,j)}}return b}}let r;t.customHeaders&&Object.keys(t.customHeaders).length>0?r={Authorization:`Bearer ${o}`,...t.customHeaders}:r={Authorization:`Bearer ${o}`,Source:"sdk/file"};const n=new FormData;if(n.append("file",a,a.name),e?.url)try{const i=await fetch(e.url,{method:"POST",headers:r,body:n});if(!i.ok){const h=await i.text();throw i.status===401||i.status===403?new m(`Authentication failed: ${h}`,i.status,h):new p(`HTTP error: ${h}`,i.status,h)}return(await i.json()).data}catch(i){throw i instanceof c?i:i instanceof Error?new c(`Error processing base64: ${i.message}`):new c("An unknown error occurred while trying to upload base64")}n.append("name",e?.metadata?.name||a.name||"File from SDK"),e?.groupId&&n.append("group_id",e.groupId),e?.metadata?.keyvalues&&n.append("keyvalues",JSON.stringify(e.metadata.keyvalues));try{const i=await fetch(`${s}/files`,{method:"POST",headers:r,body:n});if(!i.ok){const h=await i.text();throw i.status===401||i.status===403?new m(`Authentication failed: ${h}`,i.status,h):new p(`HTTP error: ${h}`,i.status,h)}const l=(await i.json()).data;if(e?.vectorize){const h=await fetch(`${s}/vectorize/files/${l.id}`,{method:"POST",headers:{Authorization:`Bearer ${o}`}});if(h.ok)return l.vectorized=!0,l;{const f=await h.text();throw new p(`HTTP error during vectorization: ${f}`,h.status,f)}}return l}catch(i){throw i instanceof c?i:i instanceof Error?new c(`Error uploading file: ${i.message}`):new c("An unknown error occurred while uploading the file")}},rt=async(t,a,e)=>{if(!t)throw new y("Pinata configuration is missing");const o=e?.keys||t?.pinataJwt,s=e?.metadata?.name?e?.metadata?.name:"base64 string",r=Buffer.from(a,"base64"),n=new Blob([r]),i=new FormData;i.append("file",n,s),i.append("name",s),e?.groupId&&i.append("group_id",e.groupId),e?.metadata?.keyvalues&&i.append("keyvalues",JSON.stringify(e.metadata.keyvalues));let u;t.customHeaders&&Object.keys(t.customHeaders).length>0?u={Authorization:`Bearer ${o}`,...t.customHeaders}:u={Authorization:`Bearer ${o}`,Source:"sdk/base64"};let l="https://uploads.pinata.cloud/v3";if(t.uploadUrl&&(l=t.uploadUrl),e?.url)try{const h=await fetch(e.url,{method:"POST",body:i});if(!h.ok){const d=await h.text();throw h.status===401||h.status===403?new m(`Authentication failed: ${d}`,h.status,d):new p(`HTTP error: ${d}`,h.status,d)}return(await h.json()).data}catch(h){throw h instanceof c?h:h instanceof Error?new c(`Error processing base64: ${h.message}`):new c("An unknown error occurred while trying to upload base64")}try{const h=await fetch(`${l}/files`,{method:"POST",headers:u,body:i});if(!h.ok){const d=await h.text();throw h.status===401||h.status===403?new m(`Authentication failed: ${d}`,h.status,d):new p(`HTTP error: ${d}`,h.status,d)}const w=(await h.json()).data;if(e?.vectorize){const d=await fetch(`${l}/vectorize/files/${w.id}`,{method:"POST",headers:{Authorization:`Bearer ${o}`}});if(d.ok)return w.vectorized=!0,w;{const $=await d.text();throw new p(`HTTP error during vectorization: ${$}`,d.status,$)}}return w}catch(h){throw h instanceof c?h:h instanceof Error?new c(`Error processing base64: ${h.message}`):new c("An unknown error occurred while trying to upload base64")}},at=async(t,a,e)=>{if(!t)throw new y("Pinata configuration is missing");const o=e?.keys||t?.pinataJwt,s=new FormData,r=await fetch(a);if(!r.ok){const w=await r.text();throw new p(`HTTP error: ${w}`,r.status,w)}const n=await r.arrayBuffer(),i=new Blob([n]),u=e?.metadata?.name??"url_upload",l=new File([i],u);s.append("file",l,u),s.append("name",u),e?.groupId&&s.append("group_id",e.groupId),e?.metadata?.keyvalues&&s.append("keyvalues",JSON.stringify(e.metadata.keyvalues));let h;t.customHeaders&&Object.keys(t.customHeaders).length>0?h={Authorization:`Bearer ${o}`,...t.customHeaders}:h={Authorization:`Bearer ${o}`,Source:"sdk/url"};let f="https://uploads.pinata.cloud/v3";if(t.uploadUrl&&(f=t.uploadUrl),e?.url)try{const w=await fetch(e.url,{method:"POST",body:s});if(!w.ok){const g=await w.text();throw w.status===401||w.status===403?new m(`Authentication failed: ${g}`,w.status,g):new p(`HTTP error: ${g}`,w.status,g)}return(await w.json()).data}catch(w){throw w instanceof c?w:w instanceof Error?new c(`Error processing base64: ${w.message}`):new c("An unknown error occurred while trying to upload base64")}try{const w=await fetch(`${f}/files`,{method:"POST",headers:h,body:s});if(!w.ok){const g=await w.text();throw w.status===401||w.status===403?new m(`Authentication failed: ${g}`,w.status,g):new p(`HTTP error: ${g}`,w.status,g)}const $=(await w.json()).data;if(e?.vectorize){const g=await fetch(`${f}/vectorize/files/${$.id}`,{method:"POST",headers:{Authorization:`Bearer ${o}`}});if(g.ok)return $.vectorized=!0,$;{const k=await g.text();throw new p(`HTTP error during vectorization: ${k}`,g.status,k)}}return $}catch(w){throw w instanceof c?w:w instanceof Error?new c(`Error processing url: ${w.message}`):new c("An unknown error occurred while uploading by url")}},st=async(t,a,e)=>{if(!t)throw new y("Pinata configuration is missing");const o=e?.keys||t?.pinataJwt,s=JSON.stringify(a),r=new Blob([s]),n=new File([r],"data.json",{type:"application/json"}),i=new FormData;i.append("file",n,n.name),i.append("name",e?.metadata?.name||n.name||"File from SDK"),e?.groupId&&i.append("group_id",e.groupId),e?.metadata?.keyvalues&&i.append("keyvalues",JSON.stringify(e.metadata.keyvalues));let u;t.customHeaders&&Object.keys(t.customHeaders).length>0?u={Authorization:`Bearer ${o}`,...t.customHeaders}:u={Authorization:`Bearer ${o}`,Source:"sdk/json"};let l="https://uploads.pinata.cloud/v3";if(t.uploadUrl&&(l=t.uploadUrl),e?.url)try{const h=await fetch(e.url,{method:"POST",body:i});if(!h.ok){const d=await h.text();throw h.status===401||h.status===403?new m(`Authentication failed: ${d}`,h.status,d):new p(`HTTP error: ${d}`,h.status,d)}return(await h.json()).data}catch(h){throw h instanceof c?h:h instanceof Error?new c(`Error processing base64: ${h.message}`):new c("An unknown error occurred while trying to upload base64")}try{const h=await fetch(`${l}/files`,{method:"POST",headers:u,body:i});if(!h.ok){const d=await h.text();throw h.status===401||h.status===403?new m(`Authentication failed: ${d}`,h.status,d):new p(`HTTP error: ${d}`,h.status,d)}const w=(await h.json()).data;if(e?.vectorize){const d=await fetch(`${l}/vectorize/files/${w.id}`,{method:"POST",headers:{Authorization:`Bearer ${o}`}});if(d.ok)return w.vectorized=!0,w;{const $=await d.text();throw new p(`HTTP error during vectorization: ${$}`,d.status,$)}}return w}catch(h){throw h instanceof c?h:h instanceof Error?new c(`Error processing json: ${h.message}`):new c("An unknown error occurred while uploading json")}},it=t=>new Promise(a=>{setTimeout(a,t)}),nt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=[];let o;t.customHeaders&&Object.keys(t.customHeaders).length>0?o={Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:o={Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/deleteFile"};let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);for(const r of a)try{const n=await fetch(`${s}/files/${r}`,{method:"DELETE",headers:o});if(await it(300),!n.ok){const i=await n.text();throw n.status===401?new m(`Authentication failed: ${i}`,n.status,i):new p(`HTTP error: ${i}`,n.status,i)}e.push({id:r,status:n.statusText})}catch(n){let i;n instanceof c?i=n.message:n instanceof Error?i=`Error deleting file ${r}: ${n.message}`:i=`An unknown error occurred while deleting file ${r}`,e.push({id:r,status:i})}return e},ot=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=new URLSearchParams;if(a){const{name:r,group:n,cid:i,order:u,limit:l,mimeType:h,pageToken:f,cidPending:w,metadata:d,noGroup:$}=a;l&&e.append("limit",l.toString()),r&&e.append("name",r),n&&e.append("group",n),i&&e.append("cid",i),h&&e.append("mimeType",h),u&&e.append("order",u),f&&e.append("pageToken",f),w&&e.append("cidPending","true"),$&&e.append("group","null"),d&&typeof d=="object"&&Object.entries(d).forEach(([g,k])=>{e.append(`metadata[${g}]`,k.toString())})}let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);const s=`${o}/files?${e.toString()}`;try{let r;t.customHeaders&&Object.keys(t.customHeaders).length>0?r={Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:r={Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/listFiles"};const n=await fetch(s,{method:"GET",headers:r});if(!n.ok){const l=await n.text();throw n.status===401||n.status===403?new m(`Authentication failed: ${l}`,n.status,l):new p(`HTTP error: ${l}`,n.status,l)}return(await n.json()).data}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing list files: ${r.message}`):new c("An unknown error occurred while listing files")}},ut=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");if(!a.name&&(!a.keyvalues||Object.keys(a.keyvalues).length===0))throw new y("At least one of 'name' or 'keyvalues' must be provided");const e={};a.name!==void 0&&(e.name=a.name),a.keyvalues&&Object.keys(a.keyvalues).length>0&&(e.keyvalues=a.keyvalues);const o=JSON.stringify(e);let s;t.customHeaders&&Object.keys(t.customHeaders).length>0?s={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:s={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateMetadata"};let r="https://api.pinata.cloud/v3";t.endpointUrl&&(r=t.endpointUrl);try{const n=await fetch(`${r}/files/${a.id}`,{method:"PUT",headers:s,body:o});if(!n.ok){const l=await n.text();throw n.status===401||n.status===403?new m(`Authentication failed: ${l}`,n.status,l):new p(`HTTP error: ${l}`,n.status,l)}return(await n.json()).data}catch(n){throw n instanceof c?n:n instanceof Error?new c(`Error processing updateFile: ${n.message}`):new c("An unknown error occurred while updating file")}},E=async(t,a,e)=>{if(!t)throw new y("Pinata configuration is missing");let o,s=`${t?.pinataGateway}/files/${a}`;const r=new URLSearchParams;e&&(e.width&&r.append("img-width",e.width.toString()),e.height&&r.append("img-height",e.height.toString()),e.dpr&&r.append("img-dpr",e.dpr.toString()),e.fit&&r.append("img-fit",e.fit),e.gravity&&r.append("img-gravity",e.gravity),e.quality&&r.append("img-quality",e.quality.toString()),e.format&&r.append("img-format",e.format),e.animation!==void 0&&r.append("img-anim",e.animation.toString()),e.sharpen&&r.append("img-sharpen",e.sharpen.toString()),e.onError===!0&&r.append("img-onerror","redirect"),e.metadata&&r.append("img-metadata",e.metadata));const n=r.toString();n&&(s+=`?${n}`);const i=Math.floor(new Date().getTime()/1e3),u=JSON.stringify({url:s,date:i,expires:30,method:"GET"});let l="https://api.pinata.cloud/v3";t.endpointUrl&&(l=t.endpointUrl);let h;t.customHeaders&&Object.keys(t.customHeaders).length>0?h={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:h={"Content-Type":"application/json",Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/getCid"};const w=await(await fetch(`${l}/files/sign`,{method:"POST",headers:h,body:u})).json();try{const d=await fetch(w.data);if(!d.ok){const k=await d.text();throw d.status===401||d.status===403?new m(`Authentication Failed: ${k}`,d.status,k):new p(`HTTP error: ${k}`,d.status,k)}const $=d.headers.get("content-type")?.split(";")[0]||null;return $?.includes("application/json")?o=await d.json():$?.includes("text/")?o=await d.text():o=await d.blob(),{data:o,contentType:$}}catch(d){throw d instanceof c?d:d instanceof Error?new c(`Error processing getCid: ${d.message}`):new c("An unknown error occurred while getting CID contents")}},ct=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createKey"};const o=JSON.stringify(a);let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);try{const r=await fetch(`${s}/pinata/keys`,{method:"POST",headers:e,body:o});if(!r.ok){const i=await r.text();throw r.status===401||r.status===403?new m(`Authentication failed: ${i}`,r.status,i):new p(`HTTP error: ${i}`,r.status,i)}return await r.json()}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing createKey: ${r.message}`):new c("An unknown error occurred while creating API key")}},q=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listKeys"};const o=new URLSearchParams;if(a){const{offset:r,name:n,revoked:i,limitedUse:u,exhausted:l}=a;r&&o.append("offset",r.toString()),i!==void 0&&o.append("revoked",i.toString()),u!==void 0&&o.append("limitedUse",u.toString()),l!==void 0&&o.append("exhausted",l.toString()),n&&o.append("name",n)}let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);try{const r=await fetch(`${s}/pinata/keys?${o.toString()}`,{method:"GET",headers:e});if(!r.ok){const i=await r.text();throw r.status===401||r.status===403?new m(`Authentication failed: ${i}`,r.status,i):new p(`HTTP error: ${i}`,r.status,i)}return(await r.json()).keys}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing listKeys: ${r.message}`):new c("An unknown error occurred while listing API keys")}},ht=t=>new Promise(a=>{setTimeout(a,t)}),dt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?(e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders},e={...t.customHeaders}):e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/revokeKeys"};const o=[];let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);for(const r of a)try{const n=await fetch(`${s}/pinata/keys/${r}`,{method:"PUT",headers:e});if(await ht(300),!n.ok){const u=await n.text();throw n.status===401||n.status===403?new m(`Authentication failed: ${u}`,n.status,u):new p(`HTTP error: ${u}`,n.status,u)}const i=await n.json();o.push({key:r,status:i})}catch(n){let i;n instanceof c?i=n.message:n instanceof Error?i=`Error revoking key ${r}: ${n.message}`:i=`An unknown error occurred while revoking key ${r}`,o.push({key:r,status:i})}return o},lt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=JSON.stringify({name:a.name,is_public:a.isPublic});let o;t.customHeaders&&Object.keys(t.customHeaders).length>0?o={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:o={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createGroup"};let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);try{const r=await fetch(`${s}/files/groups`,{method:"POST",headers:o,body:e});if(!r.ok){const u=await r.text();throw r.status===401||r.status===403?new m(`Authentication failed: ${u}`,r.status,u):new p(`HTTP error: ${u}`,r.status,u)}return(await r.json()).data}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing createGroup: ${r.message}`):new c("An unknown error occurred while creating a group")}},wt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listGroups"};const o=new URLSearchParams;if(a){const{pageToken:r,name:n,limit:i,isPublic:u}=a;r&&o.append("pageToken",r.toString()),u&&o.append("isPublic",u.toString()),n&&o.append("name",n),i!==void 0&&o.append("limit",i.toString())}let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);try{const r=await fetch(`${s}/files/groups?${o.toString()}`,{method:"GET",headers:e});if(!r.ok){const u=await r.text();throw r.status===401||r.status===403?new m(`Authentication failed: ${u}`,r.status,u):new p(`HTTP error: ${u}`,r.status,u)}return(await r.json()).data}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing listGroups: ${r.message}`):new c("An unknown error occurred while listing groups")}},pt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getGroup"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const s=await fetch(`${o}/files/groups/${a.groupId}`,{method:"GET",headers:e});if(!s.ok){const i=await s.text();throw s.status===401||s.status===403?new m(`Authentication failed: ${i}`,s.status,i):new p(`HTTP error: ${i}`,s.status,i)}return(await s.json()).data}catch(s){throw s instanceof c?s:s instanceof Error?new c(`Error processing getGroup: ${s.message}`):new c("An unknown error occurred while getting info for a group")}},ft=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=n=>new Promise(i=>{setTimeout(i,n)}),o=[];let s;t.customHeaders&&Object.keys(t.customHeaders).length>0?s={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:s={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/addToGroup"};let r="https://api.pinata.cloud/v3";t.endpointUrl&&(r=t.endpointUrl);for(const n of a.files)try{const i=await fetch(`${r}/files/groups/${a.groupId}/ids/${n}`,{method:"PUT",headers:s});if(await e(300),!i.ok){const u=await i.text();throw i.status===401?new m(`Authentication failed: ${u}`,i.status,u):new p(`HTTP error: ${u}`,i.status,u)}o.push({id:n,status:i.statusText})}catch(i){let u;i instanceof c?u=i.message:i instanceof Error?u=`Error adding file ${n} to group: ${i.message}`:u=`An unknown error occurred while adding file ${n} to group`,o.push({id:n,status:u})}return o},mt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=JSON.stringify({name:a.name,is_public:a.isPublic});let o;t.customHeaders&&Object.keys(t.customHeaders).length>0?o={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:o={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateGroup"};let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);try{const r=await fetch(`${s}/files/groups/${a.groupId}`,{method:"PUT",headers:o,body:e});if(!r.ok){const u=await r.text();throw r.status===401||r.status===403?new m(`Authentication failed: ${u}`,r.status,u):new p(`HTTP error: ${u}`,r.status,u)}return(await r.json()).data}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing updateGroup: ${r.message}`):new c("An unknown error occurred while updating group")}},yt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=n=>new Promise(i=>{setTimeout(i,n)}),o=[];let s;t.customHeaders&&Object.keys(t.customHeaders).length>0?s={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:s={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/addToGroup"};let r="https://api.pinata.cloud/v3";t.endpointUrl&&(r=t.endpointUrl);for(const n of a.files)try{const i=await fetch(`${r}/files/groups/${a.groupId}/ids/${n}`,{method:"DELETE",headers:s});if(await e(300),!i.ok){const u=await i.text();throw i.status===401?new m(`Authentication failed: ${u}`,i.status,u):new p(`HTTP error: ${u}`,i.status,u)}o.push({id:n,status:i.statusText})}catch(i){let u;i instanceof c?u=i.message:i instanceof Error?u=`Error adding file ${n} to group: ${i.message}`:u=`An unknown error occurred while adding file ${n} to group`,o.push({id:n,status:u})}return o},gt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteGroup"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const s=await fetch(`${o}/files/groups/${a.groupId}`,{method:"DELETE",headers:e});if(!s.ok){const n=await s.text();throw s.status===401||s.status===403?new m(`Authentication failed: ${n}`,s.status,n):new p(`HTTP error: ${n}`,s.status,n)}return s.statusText}catch(s){throw s instanceof c?s:s instanceof Error?new c(`Error processing deleteGroup: ${s.message}`):new c("An unknown error occurred while deleting a group")}},$t=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=new URLSearchParams;if(a){const{cid:r,gateway_domain:n,start_date:i,end_date:u,file_name:l,user_agent:h,country:f,region:w,referer:d,limit:$,sort_order:g,sort_by:k,attribute:T}=a,v=n||t.pinataGateway;if(v){const A=v.replace(/^https?:\/\//,"");e.append("gateway_domain",A)}r&&e.append("cid",r),i&&e.append("start_date",i),u&&e.append("end_date",u),l&&e.append("file_name",l),h&&e.append("user_agent",h.toString()),f&&e.append("country",f.toString()),w&&e.append("region",w),d&&e.append("referer",d.toString()),$&&e.append("limit",$.toString()),g&&e.append("sort_order",g),k&&e.append("sort_by",k),T&&e.append("by",T)}let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);const s=`${o}/ipfs/gateway_analytics_top?${e.toString()}`;try{let r;t.customHeaders&&Object.keys(t.customHeaders).length>0?r={...t.customHeaders}:r={Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/analyticsTopUsage"};const n=await fetch(s,{method:"GET",headers:r});if(!n.ok){const u=await n.text();throw n.status===401||n.status===403?new m(`Authentication failed: ${u}`,n.status,u):new p(`HTTP error: ${u}`,n.status,u)}return await n.json()}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing anaytics usage: ${r.message}`):new c("An unknown error occurred while fetching gateway usage")}},kt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=new URLSearchParams;if(a){const{cid:r,gateway_domain:n,start_date:i,end_date:u,file_name:l,user_agent:h,country:f,region:w,referer:d,limit:$,sort_order:g,date_interval:k,sort_by:T}=a;r&&e.append("cid",r),n&&e.append("gateway_domain",n),i&&e.append("start_date",i),u&&e.append("end_date",u),l&&e.append("file_name",l),h&&e.append("user_agent",h.toString()),f&&e.append("country",f.toString()),w&&e.append("region",w),d&&e.append("referer",d.toString()),$&&e.append("limit",$.toString()),g&&e.append("sort_order",g),T&&e.append("sort_by",T),k&&e.append("by",k)}let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);const s=`${o}/ipfs/gateway_analytics_time_series?${e.toString()}`;try{let r;t.customHeaders&&Object.keys(t.customHeaders).length>0?r={...t.customHeaders}:r={Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/analyticsDateInterval"};const n=await fetch(s,{method:"GET",headers:r});if(!n.ok){const l=await n.text();throw n.status===401||n.status===403?new m(`Authentication failed: ${l}`,n.status,l):new p(`HTTP error: ${l}`,n.status,l)}return(await n.json()).data}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing anaytics usage: ${r.message}`):new c("An unknown error occurred while fetching gateway usage")}},Tt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const e=JSON.stringify({swap_cid:a.swapCid});let o;t.customHeaders&&Object.keys(t.customHeaders).length>0?o={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:o={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/swapCid"};let s="https://api.pinata.cloud/v3";t.endpointUrl&&(s=t.endpointUrl);try{const r=await fetch(`${s}/files/swap/${a.cid}`,{method:"PUT",headers:o,body:e});if(!r.ok){const u=await r.text();throw r.status===401||r.status===403?new m(`Authentication failed: ${u}`,r.status,u):r.status===403?new c("Unauthorized CID Swap",r.status,u):r.status===404?new c("CID not pinned to account",r.status,u):new p(`HTTP error: ${u}`,r.status,u)}return(await r.json()).data}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing CID Swap: ${r.message}`):new c("An unknown error occurred while swapping CID")}},vt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/swapHistory"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const s=await fetch(`${o}/files/swap/${a.cid}?domain=${a.domain}`,{method:"GET",headers:e});if(!s.ok){const i=await s.text();throw s.status===401||s.status===403?new m(`Authentication failed: ${i}`,s.status,i):s.status===404?new c("CID does not have history",s.status,i):new p(`HTTP error: ${i}`,s.status,i)}return(await s.json()).data}catch(s){throw s instanceof c?s:s instanceof Error?new c(`Error fetching swap history: ${s.message}`):new c("An unknown error occurred while fetching swap history")}},St=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteSwap"};let o="https://api.pinata.cloud/v3";t.endpointUrl&&(o=t.endpointUrl);try{const s=await fetch(`${o}/files/swap/${a}`,{method:"DELETE",headers:e});if(!s.ok){const r=await s.text();throw s.status===401||s.status===403?new m(`Authentication failed: ${r}`,s.status,r):s.status===403?new c("Unauthorized CID Swap Deletion",s.status,r):s.status===404?new c("CID not pinned to account",s.status,r):new p(`HTTP error: ${r}`,s.status,r)}return s.statusText}catch(s){throw s instanceof c?s:s instanceof Error?new c(`Error processing deleteSwap: ${s.message}`):new c("An unknown error occurred while deleting swap")}},At=async(t,a,e)=>{if(!t)throw new y("Pinata configuration is missing");let o;a?.gateway?o=a.gateway.startsWith("https://")?a.gateway:`https://${a.gateway}`:o=t.pinataGateway;let s=`${o}/files/${a.cid}`;const r=new URLSearchParams;e&&(e.width&&r.append("img-width",e.width.toString()),e.height&&r.append("img-height",e.height.toString()),e.dpr&&r.append("img-dpr",e.dpr.toString()),e.fit&&r.append("img-fit",e.fit),e.gravity&&r.append("img-gravity",e.gravity),e.quality&&r.append("img-quality",e.quality.toString()),e.format&&r.append("img-format",e.format),e.animation!==void 0&&r.append("img-anim",e.animation.toString()),e.sharpen&&r.append("img-sharpen",e.sharpen.toString()),e.onError===!0&&r.append("img-onerror","redirect"),e.metadata&&r.append("img-metadata",e.metadata));const n=r.toString();n&&(s+=`?${n}`);const i=a?.date||Math.floor(new Date().getTime()/1e3),u=JSON.stringify({url:s,date:i,expires:a.expires,method:"GET"});let l="https://api.pinata.cloud/v3";t.endpointUrl&&(l=t.endpointUrl);let h;t.customHeaders&&Object.keys(t.customHeaders).length>0?h={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:h={"Content-Type":"application/json",Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/createSignURL"};try{const f=await fetch(`${l}/files/sign`,{method:"POST",headers:h,body:u});if(!f.ok){const d=await f.text();throw f.status===401||f.status===403?new m(`Authentication Failed: ${d}`,f.status,d):new p(`HTTP error: ${d}`,f.status,d)}return(await f.json()).data}catch(f){throw f instanceof c?f:f instanceof Error?new c(`Error processing createSignedURL: ${f.message}`):new c("An unknown error occurred while getting signed url")}},bt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/vectorizeFile"};let o="https://uploads.pinata.cloud/v3";t.uploadUrl&&(o=t.uploadUrl);try{const s=await fetch(`${o}/vectorize/files/${a}`,{method:"POST",headers:e});if(!s.ok){const n=await s.text();throw s.status===401||s.status===403?new m(`Authentication failed: ${n}`,s.status,n):new p(`HTTP error: ${n}`,s.status,n)}return await s.json()}catch(s){throw s instanceof c?s:s instanceof Error?new c(`Error processing vectorize file: ${s.message}`):new c("An unknown error occurred while vectorizing file")}},Pt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/vectorQuery"};let o="https://uploads.pinata.cloud/v3";t.uploadUrl&&(o=t.uploadUrl);const s=JSON.stringify({text:a.query});try{const r=await fetch(`${o}/vectorize/groups/${a.groupId}/query`,{method:"POST",headers:e,body:s});if(!r.ok){const u=await r.text();throw r.status===401||r.status===403?new m(`Authentication failed: ${u}`,r.status,u):new p(`HTTP error: ${u}`,r.status,u)}const i=(await r.json()).data;if(a.returnFile){if(i.matches.length===0)throw new c("No files returned in query to fetch");const u=i.matches[0].cid;return await E(t,u,void 0)}return i}catch(r){throw r instanceof c?r:r instanceof Error?new c(`Error processing vectorize file: ${r.message}`):new c("An unknown error occurred while vectorizing file")}},Ht=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");let e;t.customHeaders&&Object.keys(t.customHeaders).length>0?e={Authorization:`Bearer ${t.pinataJwt}`,...t.customHeaders}:e={Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/vectorizeFile"};let o="https://uploads.pinata.cloud/v3";t.uploadUrl&&(o=t.uploadUrl);try{const s=await fetch(`${o}/vectorize/files/${a}`,{method:"DELETE",headers:e});if(!s.ok){const n=await s.text();throw s.status===401||s.status===403?new m(`Authentication failed: ${n}`,s.status,n):new p(`HTTP error: ${n}`,s.status,n)}return await s.json()}catch(s){throw s instanceof c?s:s instanceof Error?new c(`Error processing vectorize file: ${s.message}`):new c("An unknown error occurred while vectorizing file")}},jt=async(t,a)=>{if(!t)throw new y("Pinata configuration is missing");const o={date:a?.date||Math.floor(new Date().getTime()/1e3),expires:a.expires};a.groupId&&(o.group_id=a.groupId),a.name&&(o.filename=a.name),a.keyvalues&&(o.keyvalues=a.keyvalues);let s="https://uploads.pinata.cloud/v3";t.uploadUrl&&(s=t.uploadUrl);let r;t.customHeaders&&Object.keys(t.customHeaders).length>0?r={Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",...t.customHeaders}:r={"Content-Type":"application/json",Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/createSignURL"};try{const n=await fetch(`${s}/files/sign`,{method:"POST",headers:r,body:JSON.stringify(o)});if(!n.ok){const u=await n.text();throw n.status===401||n.status===403?new m(`Authentication Failed: ${u}`,n.status,u):new p(`HTTP error: ${u}`,n.status,u)}return(await n.json()).data}catch(n){throw n instanceof c?n:n instanceof Error?new c(`Error processing createSignedURL: ${n.message}`):new c("An unknown error occurred while getting signed url")}},S=t=>{let a=t?.pinataGateway;return t&&a&&(a&&!a.startsWith("https://")&&(a=`https://${a}`),t.pinataGateway=a),t},zt=class{constructor(t){this.config=S(t),this.files=new qt(this.config),this.upload=new Et(this.config),this.gateways=new Dt(this.config),this.keys=new Ct(this.config),this.groups=new It(this.config),this.analytics=new Ot(this.config)}setNewHeaders(t){this.config||(this.config={pinataJwt:"",customHeaders:{}}),this.config.customHeaders={...this.config.customHeaders,...t},this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config),this.analytics.updateConfig(this.config)}setNewJwt(t){this.config||(this.config={pinataJwt:""}),this.config.pinataJwt=t,this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config),this.analytics.updateConfig(this.config)}testAuthentication(){return Q(this.config)}},qt=class{constructor(t){this.config=S(t)}updateConfig(t){this.config=t}list(){return new Ut(this.config)}delete(t){return nt(this.config,t)}update(t){return ut(this.config,t)}addSwap(t){return Tt(this.config,t)}getSwapHistory(t){return vt(this.config,t)}deleteSwap(t){return St(this.config,t)}vectorize(t){return bt(this.config,t)}queryVectors(t){return Pt(this.config,t)}deleteVectors(t){return Ht(this.config,t)}},P=class{constructor(t,a,...e){this.config=t,this.uploadFunction=a,this.args=e}addMetadata(t){return this.metadata=t,this}key(t){return this.keys=t,this}vectorize(){return this.vector=!0,this}url(t){return this.uploadUrl=t,this}group(t){return this.groupId=t,this}then(t,a){const e=this.args[this.args.length-1]||{};return this.metadata&&(e.metadata=this.metadata),this.keys&&(e.keys=this.keys),this.groupId&&(e.groupId=this.groupId),this.vector&&(e.vectorize=this.vector),this.uploadUrl&&(e.url=this.uploadUrl),this.args[this.args.length-1]=e,this.uploadFunction(this.config,...this.args).then(t,a)}},Et=class{constructor(t){this.config=S(t)}updateConfig(t){this.config=t}file(t,a){return new P(this.config,et,t,a)}base64(t,a){return new P(this.config,rt,t,a)}url(t,a){return new P(this.config,at,t,a)}json(t,a){return new P(this.config,st,t,a)}createSignedURL(t){return jt(this.config,t)}},Ut=class{constructor(t){this.query={},this.config=t}name(t){return this.query.name=t,this}group(t){return this.query.group=t,this}cid(t){return this.query.cid=t,this}mimeType(t){return this.query.mimeType=t,this}order(t){return this.query.order=t,this}limit(t){return this.query.limit=t,this}cidPending(t){return this.query.cidPending=t,this}metadata(t){return this.query.metadata=t,this}noGroup(t){return this.query.noGroup=t,this}pageToken(t){return this.query.pageToken=t,this}then(t){return this.fetchPage().then(t)}async fetchPage(){this.currentPageToken&&(this.query.pageToken=this.currentPageToken);const t=await ot(this.config,this.query);return this.currentPageToken=t.next_page_token,t}async*[Symbol.asyncIterator](){for(;;){const t=await this.fetchPage();for(const a of t.files)yield a;if(!this.currentPageToken)break}}async all(){const t=[];for await(const a of this)t.push(a);return t}},Dt=class{constructor(t){this.config=S(t)}updateConfig(t){this.config=t}get(t){return new Jt(this.config,t)}createSignedURL(t){return new _t(this.config,t)}},Jt=class{constructor(t,a){this.options={},this.config=t,this.cid=a}optimizeImage(t){return this.options={...this.options,...t},this}then(t){return E(this.config,this.cid,this.options).then(t)}},_t=class{constructor(t,a){this.imgOpts={},this.config=t,this.urlOpts=a}optimizeImage(t){return this.imgOpts={...this.imgOpts,...t},this}then(t){return At(this.config,this.urlOpts,this.imgOpts).then(t)}},Ct=class{constructor(t){this.config=S(t)}updateConfig(t){this.config=t}create(t){return ct(this.config,t)}list(){return new xt(this.config)}revoke(t){return dt(this.config,t)}},xt=class{constructor(t){this.query={},this.config=t}offset(t){return this.query.offset=t,this}revoked(t){return this.query.revoked=t,this}limitedUse(t){return this.query.limitedUse=t,this}exhausted(t){return this.query.exhausted=t,this}name(t){return this.query.name=t,this}then(t){return q(this.config,this.query).then(t)}async*[Symbol.asyncIterator](){let t=!0,a=0;for(;t;){this.query.offset=a;const e=await q(this.config,this.query);for(const o of e)yield o;e.length===0?t=!1:a+=e.length}}async all(){const t=[];for await(const a of this)t.push(a);return t}},It=class{constructor(t){this.config=S(t)}updateConfig(t){this.config=t}create(t){return lt(this.config,t)}list(){return new Bt(this.config)}get(t){return pt(this.config,t)}addFiles(t){return ft(this.config,t)}removeFiles(t){return yt(this.config,t)}update(t){return mt(this.config,t)}delete(t){return gt(this.config,t)}},Bt=class{constructor(t){this.query={},this.config=t}name(t){return this.query.name=t,this}limit(t){return this.query.limit=t,this}isPublic(t){return this.query.isPublic=t,this}pageToken(t){return this.query.pageToken=t,this}then(t){return this.fetchPage().then(a=>(this.nextPageToken=a.next_page_token,a)).then(t)}async fetchPage(){return this.nextPageToken&&(this.query.pageToken=this.nextPageToken),wt(this.config,this.query)}async*[Symbol.asyncIterator](){for(;;){const t=await this.fetchPage();for(const a of t.groups)yield a;if(!t.next_page_token)break;this.nextPageToken=t.next_page_token}}async all(){const t=[];for await(const a of this)t.push(a);return t}},Ot=class{constructor(t){this.config=S(t),this.requests=new Nt(this.config),this.bandwidth=new Ft(this.config)}updateConfig(t){this.config=t,this.requests.updateConfig(t),this.bandwidth.updateConfig(t)}summary(t){return new Lt(this.config,t.domain,t.start,t.end,t.interval)}},Gt=t=>{const a=new Date,e=new Date;return e.setDate(e.getDate()-t),{start:e.toISOString().split("T")[0],end:a.toISOString().split("T")[0]}},U=class{constructor(t,a,e,o){this.config=t,this.query={gateway_domain:a,start_date:e,end_date:o,sort_by:"requests",attribute:"cid"}}cid(t){return this.query.attribute="cid",t&&(this.query.cid=t),this}fileName(t){return this.query.attribute="file_name",t&&(this.query.file_name=t),this}userAgent(t){return this.query.attribute="user_agent",t&&(this.query.user_agent=t),this}country(t){return this.query.attribute="country",t&&(this.query.country=t),this}region(t){return this.query.attribute="region",t&&(this.query.region=t),this}referer(t){return this.query.attribute="referer",t&&(this.query.referer=t),this}limit(t){return this.query.limit=t,this}sort(t){return this.query.sort_order=t,this}days(t){const{start:a,end:e}=Gt(t);return this.query.start_date=a,this.query.end_date=e,this}then(t){return $t(this.config,this.query).then(t)}},Nt=class extends U{constructor(t){super(t,"","",""),this.query.sort_by="requests"}updateConfig(t){this.config=t}customDates(t,a){return t&&(this.query.start_date=t),a&&(this.query.end_date=a),this}from(t){return this.query.gateway_domain=t,this}},Ft=class extends U{constructor(t){super(t,"","",""),this.query.sort_by="bandwidth"}updateConfig(t){this.config=t}customDates(t,a){return t&&(this.query.start_date=t),a&&(this.query.end_date=a),this}from(t){return this.query.gateway_domain=t,this}},Rt=class{constructor(t,a){this.requestCount=0,this.lastRequestTime=0,this.MAX_REQUESTS_PER_MINUTE=30,this.MINUTE_IN_MS=6e4,this.config=t,this.query=a}cid(t){return this.query.cid=t,this}fileName(t){return this.query.file_name=t,this}userAgent(t){return this.query.user_agent=t,this}country(t){return this.query.country=t,this}region(t){return this.query.region=t,this}referer(t){return this.query.referer=t,this}limit(t){return this.query.limit=t,this}sort(t){return this.query.sort_order=t,this}async getAnalytics(){throw new Error("getAnalytics method must be implemented in derived class")}then(t){return this.getAnalytics().then(t)}},Lt=class extends Rt{constructor(t,a,e,o,s){super(t,{gateway_domain:a,start_date:e,end_date:o,date_interval:s})}sortBy(t){return this.query.sort_by=t,this}async getAnalytics(){return kt(this.config,this.query)}async all(){return this.getAnalytics()}};const Mt=new zt({pinataJwt:"eeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySW5mb3JtYXRpb24iOnsiaWQiOiJhNWQxZGJiMy05ODhhLTQ5NGItYmI4ZS1jZmZhYzU1NWI2ZWIiLCJlbWFpbCI6ImJhYm9vbmZ1YkBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGluX3BvbGljeSI6eyJyZWdpb25zIjpbeyJkZXNpcmVkUmVwbGljYXRpb25Db3VudCI6MSwiaWQiOiJGUkExIn0seyJkZXNpcmVkUmVwbGljYXRpb25Db3VudCI6MSwiaWQiOiJOWUMxIn1dLCJ2ZXJzaW9uIjoxfSwibWZhX2VuYWJsZWQiOmZhbHNlLCJzdGF0dXMiOiJBQ1RJVkUifSwiYXV0aGVudGljYXRpb25UeXBlIjoic2NvcGVkS2V5Iiwic2NvcGVkS2V5S2V5IjoiNWMyNDVjMWEyOWVkMzQyYTczZTciLCJzY29wZWRLZXlTZWNyZXQiOiJjNDBiZjM2NDRjYWRjN2M2NDRlY2RlZjZmNzIyNzRmMGU4Njg3MDMwZmJhNzA5ZGY1YmQ1N2ExZGU4N2EzZGI3IiwiZXhwIjoxNzY0NzA5OTgxfQ.xW_dzuw8Zm8PjXKZtE0BNlhH37IOXffMzfyoxUQxFOY",pinataGateway:void 0});async function Zt(t){try{const a=await Mt.gateways.get(t),{data:e,contentType:o}=a||{};if(o==="application/json")return JSON.parse(e);throw new Error("Content is not JSON")}catch(a){throw console.error("Error fetching JSON from IPFS:",a),a}}var Wt=J("<!> <!>",1);function re(t,a){N(a,!0),Z();let e="",o=!1;V(z,i=>i),F(async()=>{if("NDEFReader"in window){const i=new NDEFReader;try{await i.scan(),i.onreading=u=>{const l=u.message;for(const h of l.records)h.recordType==="text"&&(e=new TextDecoder(h.encoding).decode(h.data))}}catch(u){console.error("NFC reading error:",u)}}try{const i=await Zt("bafybeigkkz45vxlvtqjzufjvgm6t3t7bcerreeiccjcwynp2bnmt4utvne");i&&(z.set(i),o=!0)}catch(i){console.error("Failed to fetch wallet configuration from IPFS:",i),o=!1}});var s=Wt(),r=R(s);X(r,()=>a.children);var n=M(r,2);W(n,i=>{}),D(t,s),L()}export{re as component,ee as universal};
