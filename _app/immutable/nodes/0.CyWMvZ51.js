import{b as p,t as m}from"../chunks/disclose-version.CPnrpXm0.js";import{d as u,E as g,l as v,n as _,W as b,h as y,m as h,R as w,X as F,Y as T,T as x,Z as E}from"../chunks/index-client.CWw6DACK.js";import{s as j,i as D}from"../chunks/preload-helper.DQ5t373i.js";import{aX as d,aY as N,aZ as R}from"../chunks/card.BPfA34iE.js";import{d as f}from"../chunks/index.Crl-nDfS.js";function S(n,a,...s){var t=n,r=_,o;u(()=>{r!==(r=a())&&(o&&(b(o),o=null),o=v(()=>r(t,...s)))},g),y&&(t=h)}const k=!0,P=!1,Y=Object.freeze(Object.defineProperty({__proto__:null,prerender:k,ssr:P},Symbol.toStringTag,{value:"Module"}));var z=m("<!> <!>",1);function Z(n,a){w(a,!0),j();let s="";f(d,e=>e),f(N,e=>e),F(async()=>{if("NDEFReader"in window){const e=new NDEFReader;try{await e.scan(),e.onreading=c=>{const l=c.message;for(const i of l.records)i.recordType==="text"&&(s=new TextDecoder(i.encoding).decode(i.data))}}catch(c){console.error("NFC reading error:",c)}}try{const e=await R("bafybeigkkz45vxlvtqjzufjvgm6t3t7bcerreeiccjcwynp2bnmt4utvne");e&&d.set(e)}catch(e){console.error("Failed to fetch wallet configuration from IPFS:",e)}});var t=z(),r=T(t);S(r,()=>a.children);var o=E(r,2);D(o,e=>{}),p(n,t),x()}export{Z as component,Y as universal};
